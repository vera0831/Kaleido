// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// clamping
arma::cube clamping(arma::cube img);
RcppExport SEXP _Kaleido_clamping(SEXP imgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type img(imgSEXP);
    rcpp_result_gen = Rcpp::wrap(clamping(img));
    return rcpp_result_gen;
END_RCPP
}
// im_height
int im_height(arma::cube img);
RcppExport SEXP _Kaleido_im_height(SEXP imgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type img(imgSEXP);
    rcpp_result_gen = Rcpp::wrap(im_height(img));
    return rcpp_result_gen;
END_RCPP
}
// im_width
int im_width(arma::cube img);
RcppExport SEXP _Kaleido_im_width(SEXP imgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type img(imgSEXP);
    rcpp_result_gen = Rcpp::wrap(im_width(img));
    return rcpp_result_gen;
END_RCPP
}
// im_nc
int im_nc(arma::cube img);
RcppExport SEXP _Kaleido_im_nc(SEXP imgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type img(imgSEXP);
    rcpp_result_gen = Rcpp::wrap(im_nc(img));
    return rcpp_result_gen;
END_RCPP
}
// im_npix
int im_npix(arma::cube img);
RcppExport SEXP _Kaleido_im_npix(SEXP imgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type img(imgSEXP);
    rcpp_result_gen = Rcpp::wrap(im_npix(img));
    return rcpp_result_gen;
END_RCPP
}
// im_rep
arma::cube im_rep(arma::mat img);
RcppExport SEXP _Kaleido_im_rep(SEXP imgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type img(imgSEXP);
    rcpp_result_gen = Rcpp::wrap(im_rep(img));
    return rcpp_result_gen;
END_RCPP
}
// feather
arma::cube feather(arma::cube img);
RcppExport SEXP _Kaleido_feather(SEXP imgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type img(imgSEXP);
    rcpp_result_gen = Rcpp::wrap(feather(img));
    return rcpp_result_gen;
END_RCPP
}
// nostalgia
arma::cube nostalgia(arma::cube img);
RcppExport SEXP _Kaleido_nostalgia(SEXP imgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type img(imgSEXP);
    rcpp_result_gen = Rcpp::wrap(nostalgia(img));
    return rcpp_result_gen;
END_RCPP
}
// lighting
arma::cube lighting(arma::cube img, double centerx, double centery, double strength);
RcppExport SEXP _Kaleido_lighting(SEXP imgSEXP, SEXP centerxSEXP, SEXP centerySEXP, SEXP strengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type img(imgSEXP);
    Rcpp::traits::input_parameter< double >::type centerx(centerxSEXP);
    Rcpp::traits::input_parameter< double >::type centery(centerySEXP);
    Rcpp::traits::input_parameter< double >::type strength(strengthSEXP);
    rcpp_result_gen = Rcpp::wrap(lighting(img, centerx, centery, strength));
    return rcpp_result_gen;
END_RCPP
}
// fleetingtime
arma::cube fleetingtime(arma::cube img);
RcppExport SEXP _Kaleido_fleetingtime(SEXP imgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type img(imgSEXP);
    rcpp_result_gen = Rcpp::wrap(fleetingtime(img));
    return rcpp_result_gen;
END_RCPP
}
// sketcher
arma::cube sketcher(arma::cube img, int ksize, int cont, double sigma);
RcppExport SEXP _Kaleido_sketcher(SEXP imgSEXP, SEXP ksizeSEXP, SEXP contSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type img(imgSEXP);
    Rcpp::traits::input_parameter< int >::type ksize(ksizeSEXP);
    Rcpp::traits::input_parameter< int >::type cont(contSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(sketcher(img, ksize, cont, sigma));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Kaleido_clamping", (DL_FUNC) &_Kaleido_clamping, 1},
    {"_Kaleido_im_height", (DL_FUNC) &_Kaleido_im_height, 1},
    {"_Kaleido_im_width", (DL_FUNC) &_Kaleido_im_width, 1},
    {"_Kaleido_im_nc", (DL_FUNC) &_Kaleido_im_nc, 1},
    {"_Kaleido_im_npix", (DL_FUNC) &_Kaleido_im_npix, 1},
    {"_Kaleido_im_rep", (DL_FUNC) &_Kaleido_im_rep, 1},
    {"_Kaleido_feather", (DL_FUNC) &_Kaleido_feather, 1},
    {"_Kaleido_nostalgia", (DL_FUNC) &_Kaleido_nostalgia, 1},
    {"_Kaleido_lighting", (DL_FUNC) &_Kaleido_lighting, 4},
    {"_Kaleido_fleetingtime", (DL_FUNC) &_Kaleido_fleetingtime, 1},
    {"_Kaleido_sketcher", (DL_FUNC) &_Kaleido_sketcher, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_Kaleido(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
